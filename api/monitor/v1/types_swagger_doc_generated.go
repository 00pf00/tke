/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2019 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

package v1

// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-generated-swagger-docs.sh

// AUTO-GENERATED FUNCTIONS START HERE. DO NOT EDIT.
var map_Collector = map[string]string{
	"":     "Collector is a monitor component.",
	"spec": "Spec defines the desired identities of clusters in this set.",
}

func (Collector) SwaggerDoc() map[string]string {
	return map_Collector
}

var map_CollectorList = map[string]string{
	"":      "CollectorList is the whole list of all collectors which owned by a tenant.",
	"items": "List of Collector",
}

func (CollectorList) SwaggerDoc() map[string]string {
	return map_CollectorList
}

var map_CollectorSpec = map[string]string{
	"":              "CollectorSpec describes the attributes on a Collector.",
	"version":       "Version is the components version.",
	"storage":       "Storage is the remote address for collector when writing/reading outside of cluster.",
	"notifyWebhook": "NotifyWebhook is the address that alert messages send to, optional. If not set, a default webhook address \"https://[notify-api-address]/webhook\" will be used.",
}

func (CollectorSpec) SwaggerDoc() map[string]string {
	return map_CollectorSpec
}

var map_CollectorStatus = map[string]string{
	"":                            "CollectorStatus is information about the current status of a Collector.",
	"version":                     "Version is the version of collector.",
	"components":                  "Components is the components version such as node-exporter and alert manager.",
	"phase":                       "Phase is the current lifecycle phase of the helm of cluster.",
	"reason":                      "Reason is a brief CamelCase string that describes any failure.",
	"retryCount":                  "RetryCount is a int between 0 and 5 that describes the time of retrying initializing.",
	"lastReInitializingTimestamp": "LastReInitializingTimestamp is a timestamp that describes the last time of retrying initializing.",
}

func (CollectorStatus) SwaggerDoc() map[string]string {
	return map_CollectorStatus
}

var map_CollectorStorage = map[string]string{
	"": "CollectorStorage is the remote write/read address for collector.",
}

func (CollectorStorage) SwaggerDoc() map[string]string {
	return map_CollectorStorage
}

var map_ConfigMap = map[string]string{
	"":           "ConfigMap holds configuration data for tke to consume.",
	"data":       "Data contains the configuration data. Each key must consist of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The keys stored in Data must not overlap with the keys in the BinaryData field, this is enforced during validation process.",
	"binaryData": "BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys stored in BinaryData must not overlap with the ones in the Data field, this is enforced during validation process.",
}

func (ConfigMap) SwaggerDoc() map[string]string {
	return map_ConfigMap
}

var map_ConfigMapList = map[string]string{
	"":      "ConfigMapList is a resource containing a list of ConfigMap objects.",
	"items": "Items is the list of ConfigMaps.",
}

func (ConfigMapList) SwaggerDoc() map[string]string {
	return map_ConfigMapList
}

var map_Metric = map[string]string{
	"": "Metric defines the structure for querying monitoring data requests and results.",
}

func (Metric) SwaggerDoc() map[string]string {
	return map_Metric
}

var map_MetricList = map[string]string{
	"":      "MetricList is the whole list of all metrics.",
	"items": "List of metrics",
}

func (MetricList) SwaggerDoc() map[string]string {
	return map_MetricList
}

// AUTO-GENERATED FUNCTIONS END HERE
