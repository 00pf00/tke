// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2019 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	monitor "tkestack.io/tke/api/monitor"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AlarmEvaluator)(nil), (*monitor.AlarmEvaluator)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmEvaluator_To_monitor_AlarmEvaluator(a.(*AlarmEvaluator), b.(*monitor.AlarmEvaluator), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmEvaluator)(nil), (*AlarmEvaluator)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmEvaluator_To_v1_AlarmEvaluator(a.(*monitor.AlarmEvaluator), b.(*AlarmEvaluator), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmMetric)(nil), (*monitor.AlarmMetric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmMetric_To_monitor_AlarmMetric(a.(*AlarmMetric), b.(*monitor.AlarmMetric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmMetric)(nil), (*AlarmMetric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmMetric_To_v1_AlarmMetric(a.(*monitor.AlarmMetric), b.(*AlarmMetric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmNotifyWay)(nil), (*monitor.AlarmNotifyWay)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmNotifyWay_To_monitor_AlarmNotifyWay(a.(*AlarmNotifyWay), b.(*monitor.AlarmNotifyWay), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmNotifyWay)(nil), (*AlarmNotifyWay)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmNotifyWay_To_v1_AlarmNotifyWay(a.(*monitor.AlarmNotifyWay), b.(*AlarmNotifyWay), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmPolicy)(nil), (*monitor.AlarmPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmPolicy_To_monitor_AlarmPolicy(a.(*AlarmPolicy), b.(*monitor.AlarmPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmPolicy)(nil), (*AlarmPolicy)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmPolicy_To_v1_AlarmPolicy(a.(*monitor.AlarmPolicy), b.(*AlarmPolicy), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmPolicyList)(nil), (*monitor.AlarmPolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmPolicyList_To_monitor_AlarmPolicyList(a.(*AlarmPolicyList), b.(*monitor.AlarmPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmPolicyList)(nil), (*AlarmPolicyList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmPolicyList_To_v1_AlarmPolicyList(a.(*monitor.AlarmPolicyList), b.(*AlarmPolicyList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmPolicySpec)(nil), (*monitor.AlarmPolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec(a.(*AlarmPolicySpec), b.(*monitor.AlarmPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmPolicySpec)(nil), (*AlarmPolicySpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec(a.(*monitor.AlarmPolicySpec), b.(*AlarmPolicySpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*AlarmPolicyStatus)(nil), (*monitor.AlarmPolicyStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus(a.(*AlarmPolicyStatus), b.(*monitor.AlarmPolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.AlarmPolicyStatus)(nil), (*AlarmPolicyStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus(a.(*monitor.AlarmPolicyStatus), b.(*AlarmPolicyStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Collector)(nil), (*monitor.Collector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Collector_To_monitor_Collector(a.(*Collector), b.(*monitor.Collector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.Collector)(nil), (*Collector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_Collector_To_v1_Collector(a.(*monitor.Collector), b.(*Collector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CollectorList)(nil), (*monitor.CollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CollectorList_To_monitor_CollectorList(a.(*CollectorList), b.(*monitor.CollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.CollectorList)(nil), (*CollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_CollectorList_To_v1_CollectorList(a.(*monitor.CollectorList), b.(*CollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CollectorSpec)(nil), (*monitor.CollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CollectorSpec_To_monitor_CollectorSpec(a.(*CollectorSpec), b.(*monitor.CollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.CollectorSpec)(nil), (*CollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_CollectorSpec_To_v1_CollectorSpec(a.(*monitor.CollectorSpec), b.(*CollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CollectorStatus)(nil), (*monitor.CollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CollectorStatus_To_monitor_CollectorStatus(a.(*CollectorStatus), b.(*monitor.CollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.CollectorStatus)(nil), (*CollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_CollectorStatus_To_v1_CollectorStatus(a.(*monitor.CollectorStatus), b.(*CollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CollectorStorage)(nil), (*monitor.CollectorStorage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CollectorStorage_To_monitor_CollectorStorage(a.(*CollectorStorage), b.(*monitor.CollectorStorage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.CollectorStorage)(nil), (*CollectorStorage)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_CollectorStorage_To_v1_CollectorStorage(a.(*monitor.CollectorStorage), b.(*CollectorStorage), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigMap)(nil), (*monitor.ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMap_To_monitor_ConfigMap(a.(*ConfigMap), b.(*monitor.ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.ConfigMap)(nil), (*ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_ConfigMap_To_v1_ConfigMap(a.(*monitor.ConfigMap), b.(*ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigMapList)(nil), (*monitor.ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMapList_To_monitor_ConfigMapList(a.(*ConfigMapList), b.(*monitor.ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.ConfigMapList)(nil), (*ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_ConfigMapList_To_v1_ConfigMapList(a.(*monitor.ConfigMapList), b.(*ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Metric)(nil), (*monitor.Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Metric_To_monitor_Metric(a.(*Metric), b.(*monitor.Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.Metric)(nil), (*Metric)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_Metric_To_v1_Metric(a.(*monitor.Metric), b.(*Metric), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricList)(nil), (*monitor.MetricList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricList_To_monitor_MetricList(a.(*MetricList), b.(*monitor.MetricList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricList)(nil), (*MetricList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricList_To_v1_MetricList(a.(*monitor.MetricList), b.(*MetricList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricQuery)(nil), (*monitor.MetricQuery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricQuery_To_monitor_MetricQuery(a.(*MetricQuery), b.(*monitor.MetricQuery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricQuery)(nil), (*MetricQuery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricQuery_To_v1_MetricQuery(a.(*monitor.MetricQuery), b.(*MetricQuery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricQueryCondition)(nil), (*monitor.MetricQueryCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(a.(*MetricQueryCondition), b.(*monitor.MetricQueryCondition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*monitor.MetricQueryCondition)(nil), (*MetricQueryCondition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(a.(*monitor.MetricQueryCondition), b.(*MetricQueryCondition), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_AlarmEvaluator_To_monitor_AlarmEvaluator(in *AlarmEvaluator, out *monitor.AlarmEvaluator, s conversion.Scope) error {
	out.Type = in.Type
	out.Value = in.Value
	return nil
}

// Convert_v1_AlarmEvaluator_To_monitor_AlarmEvaluator is an autogenerated conversion function.
func Convert_v1_AlarmEvaluator_To_monitor_AlarmEvaluator(in *AlarmEvaluator, out *monitor.AlarmEvaluator, s conversion.Scope) error {
	return autoConvert_v1_AlarmEvaluator_To_monitor_AlarmEvaluator(in, out, s)
}

func autoConvert_monitor_AlarmEvaluator_To_v1_AlarmEvaluator(in *monitor.AlarmEvaluator, out *AlarmEvaluator, s conversion.Scope) error {
	out.Type = in.Type
	out.Value = in.Value
	return nil
}

// Convert_monitor_AlarmEvaluator_To_v1_AlarmEvaluator is an autogenerated conversion function.
func Convert_monitor_AlarmEvaluator_To_v1_AlarmEvaluator(in *monitor.AlarmEvaluator, out *AlarmEvaluator, s conversion.Scope) error {
	return autoConvert_monitor_AlarmEvaluator_To_v1_AlarmEvaluator(in, out, s)
}

func autoConvert_v1_AlarmMetric_To_monitor_AlarmMetric(in *AlarmMetric, out *monitor.AlarmMetric, s conversion.Scope) error {
	out.Measurement = in.Measurement
	out.MetricName = in.MetricName
	out.ContinuePeriod = in.ContinuePeriod
	out.DisplayName = in.DisplayName
	out.Evaluator = (*monitor.AlarmEvaluator)(unsafe.Pointer(in.Evaluator))
	out.Unit = in.Unit
	return nil
}

// Convert_v1_AlarmMetric_To_monitor_AlarmMetric is an autogenerated conversion function.
func Convert_v1_AlarmMetric_To_monitor_AlarmMetric(in *AlarmMetric, out *monitor.AlarmMetric, s conversion.Scope) error {
	return autoConvert_v1_AlarmMetric_To_monitor_AlarmMetric(in, out, s)
}

func autoConvert_monitor_AlarmMetric_To_v1_AlarmMetric(in *monitor.AlarmMetric, out *AlarmMetric, s conversion.Scope) error {
	out.Measurement = in.Measurement
	out.MetricName = in.MetricName
	out.ContinuePeriod = in.ContinuePeriod
	out.DisplayName = in.DisplayName
	out.Evaluator = (*AlarmEvaluator)(unsafe.Pointer(in.Evaluator))
	out.Unit = in.Unit
	return nil
}

// Convert_monitor_AlarmMetric_To_v1_AlarmMetric is an autogenerated conversion function.
func Convert_monitor_AlarmMetric_To_v1_AlarmMetric(in *monitor.AlarmMetric, out *AlarmMetric, s conversion.Scope) error {
	return autoConvert_monitor_AlarmMetric_To_v1_AlarmMetric(in, out, s)
}

func autoConvert_v1_AlarmNotifyWay_To_monitor_AlarmNotifyWay(in *AlarmNotifyWay, out *monitor.AlarmNotifyWay, s conversion.Scope) error {
	out.ChannelName = in.ChannelName
	out.TemplateName = in.TemplateName
	return nil
}

// Convert_v1_AlarmNotifyWay_To_monitor_AlarmNotifyWay is an autogenerated conversion function.
func Convert_v1_AlarmNotifyWay_To_monitor_AlarmNotifyWay(in *AlarmNotifyWay, out *monitor.AlarmNotifyWay, s conversion.Scope) error {
	return autoConvert_v1_AlarmNotifyWay_To_monitor_AlarmNotifyWay(in, out, s)
}

func autoConvert_monitor_AlarmNotifyWay_To_v1_AlarmNotifyWay(in *monitor.AlarmNotifyWay, out *AlarmNotifyWay, s conversion.Scope) error {
	out.ChannelName = in.ChannelName
	out.TemplateName = in.TemplateName
	return nil
}

// Convert_monitor_AlarmNotifyWay_To_v1_AlarmNotifyWay is an autogenerated conversion function.
func Convert_monitor_AlarmNotifyWay_To_v1_AlarmNotifyWay(in *monitor.AlarmNotifyWay, out *AlarmNotifyWay, s conversion.Scope) error {
	return autoConvert_monitor_AlarmNotifyWay_To_v1_AlarmNotifyWay(in, out, s)
}

func autoConvert_v1_AlarmPolicy_To_monitor_AlarmPolicy(in *AlarmPolicy, out *monitor.AlarmPolicy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_AlarmPolicy_To_monitor_AlarmPolicy is an autogenerated conversion function.
func Convert_v1_AlarmPolicy_To_monitor_AlarmPolicy(in *AlarmPolicy, out *monitor.AlarmPolicy, s conversion.Scope) error {
	return autoConvert_v1_AlarmPolicy_To_monitor_AlarmPolicy(in, out, s)
}

func autoConvert_monitor_AlarmPolicy_To_v1_AlarmPolicy(in *monitor.AlarmPolicy, out *AlarmPolicy, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_monitor_AlarmPolicy_To_v1_AlarmPolicy is an autogenerated conversion function.
func Convert_monitor_AlarmPolicy_To_v1_AlarmPolicy(in *monitor.AlarmPolicy, out *AlarmPolicy, s conversion.Scope) error {
	return autoConvert_monitor_AlarmPolicy_To_v1_AlarmPolicy(in, out, s)
}

func autoConvert_v1_AlarmPolicyList_To_monitor_AlarmPolicyList(in *AlarmPolicyList, out *monitor.AlarmPolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.AlarmPolicy)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_AlarmPolicyList_To_monitor_AlarmPolicyList is an autogenerated conversion function.
func Convert_v1_AlarmPolicyList_To_monitor_AlarmPolicyList(in *AlarmPolicyList, out *monitor.AlarmPolicyList, s conversion.Scope) error {
	return autoConvert_v1_AlarmPolicyList_To_monitor_AlarmPolicyList(in, out, s)
}

func autoConvert_monitor_AlarmPolicyList_To_v1_AlarmPolicyList(in *monitor.AlarmPolicyList, out *AlarmPolicyList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]AlarmPolicy)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_AlarmPolicyList_To_v1_AlarmPolicyList is an autogenerated conversion function.
func Convert_monitor_AlarmPolicyList_To_v1_AlarmPolicyList(in *monitor.AlarmPolicyList, out *AlarmPolicyList, s conversion.Scope) error {
	return autoConvert_monitor_AlarmPolicyList_To_v1_AlarmPolicyList(in, out, s)
}

func autoConvert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec(in *AlarmPolicySpec, out *monitor.AlarmPolicySpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Type = monitor.AlarmPolicyType(in.Type)
	out.Metrics = *(*[]monitor.AlarmMetric)(unsafe.Pointer(&in.Metrics))
	out.Objects = in.Objects
	out.ObjectsType = monitor.AlarmObjectsType(in.ObjectsType)
	out.StatisticsPeriod = in.StatisticsPeriod
	out.Namespace = (*string)(unsafe.Pointer(in.Namespace))
	out.WorkloadType = (*monitor.WorkloadType)(unsafe.Pointer(in.WorkloadType))
	out.ReceiverGroups = *(*[]string)(unsafe.Pointer(&in.ReceiverGroups))
	out.Receivers = *(*[]string)(unsafe.Pointer(&in.Receivers))
	out.NotifyWays = *(*[]monitor.AlarmNotifyWay)(unsafe.Pointer(&in.NotifyWays))
	return nil
}

// Convert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec is an autogenerated conversion function.
func Convert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec(in *AlarmPolicySpec, out *monitor.AlarmPolicySpec, s conversion.Scope) error {
	return autoConvert_v1_AlarmPolicySpec_To_monitor_AlarmPolicySpec(in, out, s)
}

func autoConvert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec(in *monitor.AlarmPolicySpec, out *AlarmPolicySpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Type = AlarmPolicyType(in.Type)
	out.Metrics = *(*[]AlarmMetric)(unsafe.Pointer(&in.Metrics))
	out.Objects = in.Objects
	out.ObjectsType = AlarmObjectsType(in.ObjectsType)
	out.StatisticsPeriod = in.StatisticsPeriod
	out.Namespace = (*string)(unsafe.Pointer(in.Namespace))
	out.WorkloadType = (*WorkloadType)(unsafe.Pointer(in.WorkloadType))
	out.ReceiverGroups = *(*[]string)(unsafe.Pointer(&in.ReceiverGroups))
	out.Receivers = *(*[]string)(unsafe.Pointer(&in.Receivers))
	out.NotifyWays = *(*[]AlarmNotifyWay)(unsafe.Pointer(&in.NotifyWays))
	return nil
}

// Convert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec is an autogenerated conversion function.
func Convert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec(in *monitor.AlarmPolicySpec, out *AlarmPolicySpec, s conversion.Scope) error {
	return autoConvert_monitor_AlarmPolicySpec_To_v1_AlarmPolicySpec(in, out, s)
}

func autoConvert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus(in *AlarmPolicyStatus, out *monitor.AlarmPolicyStatus, s conversion.Scope) error {
	out.Phase = monitor.AlarmPolicyPhase(in.Phase)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus is an autogenerated conversion function.
func Convert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus(in *AlarmPolicyStatus, out *monitor.AlarmPolicyStatus, s conversion.Scope) error {
	return autoConvert_v1_AlarmPolicyStatus_To_monitor_AlarmPolicyStatus(in, out, s)
}

func autoConvert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus(in *monitor.AlarmPolicyStatus, out *AlarmPolicyStatus, s conversion.Scope) error {
	out.Phase = AlarmPolicyPhase(in.Phase)
	out.LastTransitionTime = in.LastTransitionTime
	out.Reason = in.Reason
	out.Message = in.Message
	return nil
}

// Convert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus is an autogenerated conversion function.
func Convert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus(in *monitor.AlarmPolicyStatus, out *AlarmPolicyStatus, s conversion.Scope) error {
	return autoConvert_monitor_AlarmPolicyStatus_To_v1_AlarmPolicyStatus(in, out, s)
}

func autoConvert_v1_Collector_To_monitor_Collector(in *Collector, out *monitor.Collector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_CollectorSpec_To_monitor_CollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_CollectorStatus_To_monitor_CollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Collector_To_monitor_Collector is an autogenerated conversion function.
func Convert_v1_Collector_To_monitor_Collector(in *Collector, out *monitor.Collector, s conversion.Scope) error {
	return autoConvert_v1_Collector_To_monitor_Collector(in, out, s)
}

func autoConvert_monitor_Collector_To_v1_Collector(in *monitor.Collector, out *Collector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_monitor_CollectorSpec_To_v1_CollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_monitor_CollectorStatus_To_v1_CollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_monitor_Collector_To_v1_Collector is an autogenerated conversion function.
func Convert_monitor_Collector_To_v1_Collector(in *monitor.Collector, out *Collector, s conversion.Scope) error {
	return autoConvert_monitor_Collector_To_v1_Collector(in, out, s)
}

func autoConvert_v1_CollectorList_To_monitor_CollectorList(in *CollectorList, out *monitor.CollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.Collector)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_CollectorList_To_monitor_CollectorList is an autogenerated conversion function.
func Convert_v1_CollectorList_To_monitor_CollectorList(in *CollectorList, out *monitor.CollectorList, s conversion.Scope) error {
	return autoConvert_v1_CollectorList_To_monitor_CollectorList(in, out, s)
}

func autoConvert_monitor_CollectorList_To_v1_CollectorList(in *monitor.CollectorList, out *CollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Collector)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_CollectorList_To_v1_CollectorList is an autogenerated conversion function.
func Convert_monitor_CollectorList_To_v1_CollectorList(in *monitor.CollectorList, out *CollectorList, s conversion.Scope) error {
	return autoConvert_monitor_CollectorList_To_v1_CollectorList(in, out, s)
}

func autoConvert_v1_CollectorSpec_To_monitor_CollectorSpec(in *CollectorSpec, out *monitor.CollectorSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Type = monitor.CollectorType(in.Type)
	out.Version = in.Version
	if err := Convert_v1_CollectorStorage_To_monitor_CollectorStorage(&in.Storage, &out.Storage, s); err != nil {
		return err
	}
	out.NotifyWebhook = in.NotifyWebhook
	return nil
}

// Convert_v1_CollectorSpec_To_monitor_CollectorSpec is an autogenerated conversion function.
func Convert_v1_CollectorSpec_To_monitor_CollectorSpec(in *CollectorSpec, out *monitor.CollectorSpec, s conversion.Scope) error {
	return autoConvert_v1_CollectorSpec_To_monitor_CollectorSpec(in, out, s)
}

func autoConvert_monitor_CollectorSpec_To_v1_CollectorSpec(in *monitor.CollectorSpec, out *CollectorSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Type = CollectorType(in.Type)
	out.Version = in.Version
	if err := Convert_monitor_CollectorStorage_To_v1_CollectorStorage(&in.Storage, &out.Storage, s); err != nil {
		return err
	}
	out.NotifyWebhook = in.NotifyWebhook
	return nil
}

// Convert_monitor_CollectorSpec_To_v1_CollectorSpec is an autogenerated conversion function.
func Convert_monitor_CollectorSpec_To_v1_CollectorSpec(in *monitor.CollectorSpec, out *CollectorSpec, s conversion.Scope) error {
	return autoConvert_monitor_CollectorSpec_To_v1_CollectorSpec(in, out, s)
}

func autoConvert_v1_CollectorStatus_To_monitor_CollectorStatus(in *CollectorStatus, out *monitor.CollectorStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Components = *(*map[string]string)(unsafe.Pointer(&in.Components))
	out.Phase = monitor.CollectorPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_v1_CollectorStatus_To_monitor_CollectorStatus is an autogenerated conversion function.
func Convert_v1_CollectorStatus_To_monitor_CollectorStatus(in *CollectorStatus, out *monitor.CollectorStatus, s conversion.Scope) error {
	return autoConvert_v1_CollectorStatus_To_monitor_CollectorStatus(in, out, s)
}

func autoConvert_monitor_CollectorStatus_To_v1_CollectorStatus(in *monitor.CollectorStatus, out *CollectorStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Components = *(*map[string]string)(unsafe.Pointer(&in.Components))
	out.Phase = CollectorPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_monitor_CollectorStatus_To_v1_CollectorStatus is an autogenerated conversion function.
func Convert_monitor_CollectorStatus_To_v1_CollectorStatus(in *monitor.CollectorStatus, out *CollectorStatus, s conversion.Scope) error {
	return autoConvert_monitor_CollectorStatus_To_v1_CollectorStatus(in, out, s)
}

func autoConvert_v1_CollectorStorage_To_monitor_CollectorStorage(in *CollectorStorage, out *monitor.CollectorStorage, s conversion.Scope) error {
	out.WriteAddr = *(*[]string)(unsafe.Pointer(&in.WriteAddr))
	out.ReadAddr = *(*[]string)(unsafe.Pointer(&in.ReadAddr))
	return nil
}

// Convert_v1_CollectorStorage_To_monitor_CollectorStorage is an autogenerated conversion function.
func Convert_v1_CollectorStorage_To_monitor_CollectorStorage(in *CollectorStorage, out *monitor.CollectorStorage, s conversion.Scope) error {
	return autoConvert_v1_CollectorStorage_To_monitor_CollectorStorage(in, out, s)
}

func autoConvert_monitor_CollectorStorage_To_v1_CollectorStorage(in *monitor.CollectorStorage, out *CollectorStorage, s conversion.Scope) error {
	out.WriteAddr = *(*[]string)(unsafe.Pointer(&in.WriteAddr))
	out.ReadAddr = *(*[]string)(unsafe.Pointer(&in.ReadAddr))
	return nil
}

// Convert_monitor_CollectorStorage_To_v1_CollectorStorage is an autogenerated conversion function.
func Convert_monitor_CollectorStorage_To_v1_CollectorStorage(in *monitor.CollectorStorage, out *CollectorStorage, s conversion.Scope) error {
	return autoConvert_monitor_CollectorStorage_To_v1_CollectorStorage(in, out, s)
}

func autoConvert_v1_ConfigMap_To_monitor_ConfigMap(in *ConfigMap, out *monitor.ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_v1_ConfigMap_To_monitor_ConfigMap is an autogenerated conversion function.
func Convert_v1_ConfigMap_To_monitor_ConfigMap(in *ConfigMap, out *monitor.ConfigMap, s conversion.Scope) error {
	return autoConvert_v1_ConfigMap_To_monitor_ConfigMap(in, out, s)
}

func autoConvert_monitor_ConfigMap_To_v1_ConfigMap(in *monitor.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_monitor_ConfigMap_To_v1_ConfigMap is an autogenerated conversion function.
func Convert_monitor_ConfigMap_To_v1_ConfigMap(in *monitor.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	return autoConvert_monitor_ConfigMap_To_v1_ConfigMap(in, out, s)
}

func autoConvert_v1_ConfigMapList_To_monitor_ConfigMapList(in *ConfigMapList, out *monitor.ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_ConfigMapList_To_monitor_ConfigMapList is an autogenerated conversion function.
func Convert_v1_ConfigMapList_To_monitor_ConfigMapList(in *ConfigMapList, out *monitor.ConfigMapList, s conversion.Scope) error {
	return autoConvert_v1_ConfigMapList_To_monitor_ConfigMapList(in, out, s)
}

func autoConvert_monitor_ConfigMapList_To_v1_ConfigMapList(in *monitor.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_ConfigMapList_To_v1_ConfigMapList is an autogenerated conversion function.
func Convert_monitor_ConfigMapList_To_v1_ConfigMapList(in *monitor.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	return autoConvert_monitor_ConfigMapList_To_v1_ConfigMapList(in, out, s)
}

func autoConvert_v1_Metric_To_monitor_Metric(in *Metric, out *monitor.Metric, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_MetricQuery_To_monitor_MetricQuery(&in.Query, &out.Query, s); err != nil {
		return err
	}
	out.JSONResult = in.JSONResult
	return nil
}

// Convert_v1_Metric_To_monitor_Metric is an autogenerated conversion function.
func Convert_v1_Metric_To_monitor_Metric(in *Metric, out *monitor.Metric, s conversion.Scope) error {
	return autoConvert_v1_Metric_To_monitor_Metric(in, out, s)
}

func autoConvert_monitor_Metric_To_v1_Metric(in *monitor.Metric, out *Metric, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_monitor_MetricQuery_To_v1_MetricQuery(&in.Query, &out.Query, s); err != nil {
		return err
	}
	out.JSONResult = in.JSONResult
	return nil
}

// Convert_monitor_Metric_To_v1_Metric is an autogenerated conversion function.
func Convert_monitor_Metric_To_v1_Metric(in *monitor.Metric, out *Metric, s conversion.Scope) error {
	return autoConvert_monitor_Metric_To_v1_Metric(in, out, s)
}

func autoConvert_v1_MetricList_To_monitor_MetricList(in *MetricList, out *monitor.MetricList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]monitor.Metric)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_MetricList_To_monitor_MetricList is an autogenerated conversion function.
func Convert_v1_MetricList_To_monitor_MetricList(in *MetricList, out *monitor.MetricList, s conversion.Scope) error {
	return autoConvert_v1_MetricList_To_monitor_MetricList(in, out, s)
}

func autoConvert_monitor_MetricList_To_v1_MetricList(in *monitor.MetricList, out *MetricList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Metric)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_monitor_MetricList_To_v1_MetricList is an autogenerated conversion function.
func Convert_monitor_MetricList_To_v1_MetricList(in *monitor.MetricList, out *MetricList, s conversion.Scope) error {
	return autoConvert_monitor_MetricList_To_v1_MetricList(in, out, s)
}

func autoConvert_v1_MetricQuery_To_monitor_MetricQuery(in *MetricQuery, out *monitor.MetricQuery, s conversion.Scope) error {
	out.Table = in.Table
	out.StartTime = (*int64)(unsafe.Pointer(in.StartTime))
	out.EndTime = (*int64)(unsafe.Pointer(in.EndTime))
	out.Fields = *(*[]string)(unsafe.Pointer(&in.Fields))
	out.Conditions = *(*[]monitor.MetricQueryCondition)(unsafe.Pointer(&in.Conditions))
	out.OrderBy = in.OrderBy
	out.Order = in.Order
	out.GroupBy = *(*[]string)(unsafe.Pointer(&in.GroupBy))
	out.Limit = in.Limit
	out.Offset = in.Offset
	return nil
}

// Convert_v1_MetricQuery_To_monitor_MetricQuery is an autogenerated conversion function.
func Convert_v1_MetricQuery_To_monitor_MetricQuery(in *MetricQuery, out *monitor.MetricQuery, s conversion.Scope) error {
	return autoConvert_v1_MetricQuery_To_monitor_MetricQuery(in, out, s)
}

func autoConvert_monitor_MetricQuery_To_v1_MetricQuery(in *monitor.MetricQuery, out *MetricQuery, s conversion.Scope) error {
	out.Table = in.Table
	out.StartTime = (*int64)(unsafe.Pointer(in.StartTime))
	out.EndTime = (*int64)(unsafe.Pointer(in.EndTime))
	out.Fields = *(*[]string)(unsafe.Pointer(&in.Fields))
	out.Conditions = *(*[]MetricQueryCondition)(unsafe.Pointer(&in.Conditions))
	out.OrderBy = in.OrderBy
	out.Order = in.Order
	out.GroupBy = *(*[]string)(unsafe.Pointer(&in.GroupBy))
	out.Limit = in.Limit
	out.Offset = in.Offset
	return nil
}

// Convert_monitor_MetricQuery_To_v1_MetricQuery is an autogenerated conversion function.
func Convert_monitor_MetricQuery_To_v1_MetricQuery(in *monitor.MetricQuery, out *MetricQuery, s conversion.Scope) error {
	return autoConvert_monitor_MetricQuery_To_v1_MetricQuery(in, out, s)
}

func autoConvert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in *MetricQueryCondition, out *monitor.MetricQueryCondition, s conversion.Scope) error {
	out.Key = in.Key
	out.Expr = in.Expr
	out.Value = in.Value
	return nil
}

// Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition is an autogenerated conversion function.
func Convert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in *MetricQueryCondition, out *monitor.MetricQueryCondition, s conversion.Scope) error {
	return autoConvert_v1_MetricQueryCondition_To_monitor_MetricQueryCondition(in, out, s)
}

func autoConvert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in *monitor.MetricQueryCondition, out *MetricQueryCondition, s conversion.Scope) error {
	out.Key = in.Key
	out.Expr = in.Expr
	out.Value = in.Value
	return nil
}

// Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition is an autogenerated conversion function.
func Convert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in *monitor.MetricQueryCondition, out *MetricQueryCondition, s conversion.Scope) error {
	return autoConvert_monitor_MetricQueryCondition_To_v1_MetricQueryCondition(in, out, s)
}
